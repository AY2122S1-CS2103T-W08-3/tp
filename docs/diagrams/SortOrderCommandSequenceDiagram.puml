@startuml

!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":SortOrderCommandParser" as SortOrderCommandParser LOGIC_COLOR
participant ":SortDescriptor" as SortDescriptor LOGIC_COLOR
participant "<<class>>\nParserUtil" as ParserUtil LOGIC_COLOR
participant "d:SortOrderCommand" as SortOrderCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("sortorder f/a o/asc")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("sortorder f/a o/asc")
activate AddressBookParser

create SortOrderCommandParser
AddressBookParser -> SortOrderCommandParser
activate SortOrderCommandParser

SortOrderCommandParser --> AddressBookParser
deactivate SortOrderCommandParser

AddressBookParser -> SortOrderCommandParser : parse("f/a o/asc")
activate SortOrderCommandParser


SortOrderCommandParser -> ParserUtil  : parseSortField("a")
activate ParserUtil

ParserUtil --> SortOrderCommandParser : sortField
deactivate ParserUtil

SortOrderCommandParser -> ParserUtil  : parseSortOrdering("asc")
activate ParserUtil

ParserUtil --> SortOrderCommandParser : sortOrdering
deactivate ParserUtil

create SortDescriptor
SortOrderCommandParser -> SortDescriptor  : SortDescriptor(sortField, sortOrdering)
activate SortDescriptor

SortDescriptor --> SortOrderCommandParser : sortDescriptor
deactivate SortDescriptor

create SortOrderCommand
SortOrderCommandParser -> SortOrderCommand  : SortOrderCommand(sortDescriptor)
activate SortOrderCommand

SortOrderCommand --> SortOrderCommandParser : sortOrderCommand
deactivate SortOrderCommand

SortOrderCommandParser --> AddressBookParser : sortOrderCommand
deactivate SortOrderCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
SortOrderCommandParser -[hidden]-> AddressBookParser
destroy SortOrderCommandParser

AddressBookParser --> LogicManager : sortOrderCommand
deactivate AddressBookParser

LogicManager -> SortOrderCommand : execute()
activate SortOrderCommand

SortOrderCommand -> Model : sortOrderList(SortDescriptor)
activate Model

Model --> SortOrderCommand
deactivate Model

create CommandResult
SortOrderCommand -> CommandResult
activate CommandResult

CommandResult --> SortOrderCommand
deactivate CommandResult

SortOrderCommand --> LogicManager : result
deactivate SortOrderCommand

[<--LogicManager
deactivate LogicManager
@enduml




